# YAML configuration file for Realm Gateway Traffic Test Suite v0.1

# Total duration of the test (sec)
duration: 120

# Backoff time before scheduling tests (sec)
backoff: 5

# Global definitions for traffic tests, used if no test specific parameter is defined
global_traffic:
    dnsdata:
        dns_laddr: [["1.1.1.1", 0, 17], ["1.1.1.2", 0, 17], ["1.1.1.3", 0, 17], ["1.1.1.4", 0, 17], ["1.1.1.5", 0, 17], ["1.1.1.6", 0, 17], ["1.1.1.7", 0, 17], ["1.1.1.8", 0, 17], ["1.1.1.9", 0, 17], ["1.1.1.10", 0, 17], ["1.1.1.1", 0, 6], ["1.1.1.2", 0, 6], ["1.1.1.3", 0, 6], ["1.1.1.4", 0, 6], ["1.1.1.5", 0, 6], ["1.1.1.6", 0, 6], ["1.1.1.7", 0, 6], ["1.1.1.8", 0, 6], ["1.1.1.9", 0, 6], ["1.1.1.10", 0, 6]]
        dns_raddr: [["100.64.1.130", 53, 17]]

        # Control TCP or UDP connections via data_laddr
        data_laddr: [["1.1.2.1", 0, 6], ["1.1.2.2", 0, 6], ["1.1.2.3", 0, 6], ["1.1.2.4", 0, 6], ["1.1.2.5", 0, 6], ["1.1.2.6", 0, 6], ["1.1.2.7", 0, 6], ["1.1.2.8", 0, 6], ["1.1.2.9", 0, 6], ["1.1.2.10", 0, 6]]
        #data_laddr: [["1.1.2.1", 0, 17], ["1.1.2.2", 0, 17], ["1.1.2.3", 0, 17], ["1.1.2.4", 0, 17], ["1.1.2.5", 0, 17], ["1.1.2.6", 0, 17], ["1.1.2.7", 0, 17], ["1.1.2.8", 0, 17], ["1.1.2.9", 0, 17], ["1.1.2.10", 0, 17]]

        ## 50% FQDN + 50% SFQDN (4 equal services) traffic with mixed UDP and TCP services
        data_raddr: [["test200.gwa.demo", 2000, 6], ["test201.gwa.demo", 2000, 6], ["test202.gwa.demo", 2000, 6], ["test203.gwa.demo", 2000, 6], ["tcp2000.test200.gwa.demo", 2000, 6], ["tcp2001.test201.gwa.demo", 2001, 6], ["tcp2002.test202.gwa.demo", 2002, 6], ["tcp2003.test203.gwa.demo", 2003, 6], ["test200.gwa.demo", 2000, 17], ["test201.gwa.demo", 2000, 17], ["test202.gwa.demo", 2000, 17], ["test203.gwa.demo", 2000, 17], ["udp2000.test200.gwa.demo", 2000, 17], ["udp2001.test201.gwa.demo", 2001, 17], ["udp2002.test202.gwa.demo", 2002, 17], ["udp2003.test203.gwa.demo", 2003, 17]]

        dns_timeouts: [1,1,1,1]
        data_timeouts: [1]
        data_delay: [0.000, 0.000]

    dataspoof:
        # Control TCP or UDP connections via data_laddr
        data_laddr: [["1.1.2.1", 0, 6], ["1.1.2.2", 0, 6], ["1.1.2.3", 0, 6], ["1.1.2.4", 0, 6], ["1.1.2.5", 0, 6], ["1.1.2.6", 0, 6], ["1.1.2.7", 0, 6], ["1.1.2.8", 0, 6], ["1.1.2.9", 0, 6], ["1.1.2.10", 0, 6]]
        #data_laddr: [["1.1.2.1", 0, 17], ["1.1.2.2", 0, 17], ["1.1.2.3", 0, 17], ["1.1.2.4", 0, 17], ["1.1.2.5", 0, 17], ["1.1.2.6", 0, 17], ["1.1.2.7", 0, 17], ["1.1.2.8", 0, 17], ["1.1.2.9", 0, 17], ["1.1.2.10", 0, 17]]

        ## 50% well known port 2000 + 50% random port with mixed UDP and TCP services
        data_raddr: [["100.64.1.131", 2000, 6], ["100.64.1.132", 2000, 6], ["100.64.1.133", 2000, 6], ["100.64.1.131", 0, 6], ["100.64.1.132", 0, 6], ["100.64.1.133", 0, 6], ["100.64.1.131", 2000, 17], ["100.64.1.132", 2000, 17], ["100.64.1.133", 2000, 17], ["100.64.1.131", 0, 17], ["100.64.1.132", 0, 17], ["100.64.1.133", 0, 17]]

        interface: "wan1"


# This models all the test traffic
traffic:
    #- {type: "dnsdata",   load: 30,  distribution: "exp"}
    # 20% noise level
    - {type: "dataspoof", load: 6.0, distribution: "exp"}
